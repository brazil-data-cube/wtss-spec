openapi: 3.0.1
info:
  version: '2.0'
  title: Web Time Series Service
  description: >
        Web Time Series Service (WTSS) is a lightweight web service for handling time series data from remote sensing imagery. Given a location and a time interval you can retrieve the according time series as a JSON array of numbers.

        There are free and open source implementations based on this specification:

        - [wtss-server](https://github.com/brazil-data-cube/wtss-server): is a WTSS web server implemented in Python.

        - [wtss.py](https://github.com/brazil-data-cube/wtss.py): is a client API for Python.

        - [wtss](https://github.com/e-sensing/wtss): is a client API for R.
servers:
    - url: 'https://brazildatacube.dpi.inpe.br/wtss'
      description: Production server

    - url: 'http://brazildatacube.dpi.inpe.br/dev/wtss'
      description: Development server
paths:
  /:
    get:
      tags:
        - Capabilities
      summary: landing page
      description: |-
        The landing page provides links to the API definition, the conformance
        statements and to the feature collections in this dataset.
      operationId: getLandingPage
      responses:
        '200':
          $ref: '#/components/responses/LandingPage'
        '500':
          $ref: '#/components/responses/ServerError'
  /collections:
    get:
      operationId: getCollections
      summary: the feature collections in the dataset
      tags:
        - Capabilities
      responses:
        '200':
          description: Get all Collections
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/collections'
        '500':
          $ref: '#/components/responses/ServerError'
  '/collections/{collectionId}':
    get:
      operationId: describeCollection
      summary: The collection name `collectionId`
      parameters:
        - $ref: '#/components/parameters/collectionId'
      tags:
        - Capabilities
      responses:
        '200':
          description: Return a given Collection
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/collection'
        '400':
          $ref: '#/components/responses/InvalidParameter'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/ServerError'
  '/collections/{collectionId}/timeseries':
    get:
      operationId: getTimeSeries
      summary: fetch time series
      tags:
        - TimeSeries
      responses:
        '200':
          description: Get a Time Series of a given Collection
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/timeseries'
        '400':
          $ref: '#/components/responses/InvalidParameter'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/ServerError'
      parameters:
        - $ref: '#/components/parameters/collectionId'
        - $ref: '#/components/parameters/geom'
        - $ref: '#/components/parameters/attributes'
        - $ref: '#/components/parameters/datetime'
        - $ref: '#/components/parameters/aggregation'
        - $ref: '#/components/parameters/scale'
        - $ref: '#/components/parameters/operator'
    post:
      operationId: getTimeSeriesPost
      summary: fetch time series
      tags:
        - TimeSeries
      parameters:
        - $ref: '#/components/parameters/collectionId'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/searchBody'
      responses:
        '200':
          description: Get a Time Series of a given Collection
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/timeseries'
        '400':
          $ref: '#/components/responses/InvalidParameter'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/ServerError'
components:
  parameters:
    geom:
      name: geom
      description: >-
        The GeoJSON representation to retrieve time series for the given location.
      in: query
      required: true
      schema:
        $ref: '#/components/schemas/geom'
      style: form
      explode: false
    datetime:
      name: datetime
      in: query
      description: >-
        Either a date-time or an interval, open or closed. Date and time
        expressions

        adhere to RFC 3339. Open intervals are expressed using double-dots.


        Examples:


        * A date-time: "2018-02-12T23:20:50Z"

        * A closed interval: "2018-02-12T00:00:00Z/2018-03-18T12:31:12Z"

        * Open intervals: "2018-02-12T00:00:00Z/.." or "../2018-03-18T12:31:12Z"


        Only features that have a temporal property that intersects the value of

        `datetime` are selected.


        If a feature has multiple temporal properties, it is the decision of the

        server whether only a single temporal property is used to determine

        the extent or all relevant temporal properties.
      required: false
      schema:
        type: string
      style: form
      explode: false
    attributes:
      name: attributes
      in: query
      description: A List of attribute names of a Collection.
      required: true
      schema:
        type: array
        items:
          type: string
      explode: false
    collectionId:
      name: collectionId
      in: path
      description: local identifier of a collection
      required: true
      schema:
        type: string
    aggregation:
      name: aggregation
      in: query
      description: The aggregation methods applied in time series values.
      required: false
      schema:
        $ref: '#/components/schemas/aggregation'
    scale:
      name: scale
      in: query
      description: Apply the scale factor and scale factor offset along the time series values
      schema:
        type: boolean
        default: false
    operator:
      name: operator
      in: query
      description: Use a geospatial method to retrieve pixel intersection.
      schema:
        $ref: '#/components/schemas/operator'
  schemas:
    landing:
      type: object
      description: >-
        The index url resource of WTSS server.
      properties:
        wtss_version:
          $ref: '#/components/schemas/wtss_version'
        links:
          type: array
          items:
            $ref: '#/components/schemas/link'
    link:
      type: object
      description: >-
        Describes a relationship with another link entity.
      properties:
        href:
          description: Define the actual link in the format of an URL. Relative and absolute links are both allowed.
          type: string
        rel:
          description: The Relationship between the current document and the linked documents
          type: string
        type:
          description: The application media type of the document.
          type: string
        title:
          description: A human readable title to be used in rendered displays of the link.
          type: string
    collection:
      type: object
      required:
        - name
        - wtss_version
        - extent
      properties:
        name:
          type: string
        wtss_version:
          $ref: '#/components/schemas/wtss_version'
        extent:
          $ref: '#/components/schemas/extent'
        attributes:
          $ref: '#/components/schemas/attributes'
    attributes:
      type: array
      items:
        $ref: '#/components/schemas/attribute'
      minItems: 1
    attribute:
      title: The collection attribute metadata.
      type: object
      required:
        - name
        - datatype
        - valid_range
        - scale_factor
        - spatial_resolution
        - nodata
      properties:
        name:
          type: string
        description:
          type: string
        datatype:
          type: string
        spatial_resolution:
          type: object
          title: The spatial resolution of the coverage cells.
          properties:
            x:
              type: number
            y:
              type: number
        valid_range:
          type: object
          properties:
            min:
              type: number
            max:
              type: number
        scale_factor:
          type: number
        scale_factor_offset:
          title: Applied for Landsat Collection 2
          type: number
        nodata:
          type: number
    collections:
      type: object
      required:
        - collections
      properties:
        collections:
          type: array
          items:
            type: string
    timeseries:
      type: object
      required:
        - values
      properties:
        attributes:
          type: array
          items:
            type: object
            required:
              - name
              - series
            properties:
              name:
                type: string
              series:
                type: array
                items:
                  type: object
                  required:
                    - latitude
                    - longitude
                  properties:
                    point:
                      type: array
                      description: Latitude and Longitude, respectively.
                      maxItems: 2
                      minItems: 2
                      items:
                        type: number
                    values:
                      type: array
                      items:
                        type: number
              mean:
                type: array
                description: Display the Mean values from Series. See more in Aggregation Operator.
                items:
                  type: number
              median:
                type: array
                items:
                  type: number
              std:
                type: array
                items:
                  type: number
              min:
                type: array
                items:
                  type: number
              max:
                type: array
                items:
                  type: number
        timeline:
          type: array
          items:
            $ref: '#/components/schemas/datetime'
    extent:
      type: object
      description: >-
        The extent of the features in the collection. In the Core only spatial
        and temporal

        extents are specified. Extensions may add additional members to
        represent other

        extents, for example, thermal or pressure ranges.
      properties:
        spatial:
          description: The spatial extent of the features in the collection.
          type: object
          properties:
            bbox:
              description: >-
                One or more bounding boxes that describe the spatial extent of
                the dataset.

                In the Core only a single bounding box is supported. Extensions
                may support

                additional areas. If multiple areas are provided, the union of
                the bounding

                boxes describes the spatial extent.
              type: array
              minItems: 1
              items:
                description: >-
                  Each bounding box is provided as four numbers

                  * Lower left corner, coordinate axis 1

                  * Lower left corner, coordinate axis 2

                  * Upper right corner, coordinate axis 1

                  * Upper right corner, coordinate axis 2


                  The coordinate reference system of the values is WGS 84
                  longitude/latitude

                  (http://www.opengis.net/def/crs/OGC/1.3/CRS84) unless a
                  different coordinate

                  reference system is specified in `crs`.


                  For WGS 84 longitude/latitude the values are in most cases the
                  sequence of

                  minimum longitude, minimum latitude, maximum longitude and
                  maximum latitude.

                  However, in cases where the box spans the antimeridian the
                  first value

                  (west-most box edge) is larger than the third value (east-most
                  box edge).


                  If the vertical axis is included, the third and the sixth
                  number are

                  the bottom and the top of the 3-dimensional bounding box.


                  If a feature has multiple spatial geometry properties, it is
                  the decision of the

                  server whether only a single spatial geometry property is used
                  to determine

                  the extent or all relevant geometries.
                type: array
                minItems: 4
                maxItems: 4
                items:
                  type: number
                example:
                  - -180
                  - -90
                  - 180
                  - 90
            crs:
              description: >-
                Coordinate reference system of the coordinates in the spatial
                extent

                (property `bbox`). The default reference system is WGS 84
                longitude/latitude.

                In the Core this is the only supported coordinate reference
                system.

                Extensions may support additional coordinate reference systems
                and add

                additional enum values.
              type: string
              enum:
                - 'http://www.opengis.net/def/crs/OGC/1.3/CRS84'
              default: 'http://www.opengis.net/def/crs/OGC/1.3/CRS84'
          required:
            - bbox
        temporal:
          description: The temporal extent of the features in the collection.
          type: object
          properties:
            timeline:
              type: array
              minItems: 1
              items:
                type: string
                format: date-time
                nullable: false
          required:
            - timeline
      required:
        - spatial
        - temporal
    operator:
      type: string
      enum:
        - intersects
        - contains
      default: 'intersects'
    aggregation:
      type: array
      items:
        type: string
        enum:
          - mean
          - median
          - min
          - max
          - standard_deviation
    operators:
      type: object
      properties:
        aggregation:
          $ref: '#/components/schemas/aggregation'
        scale:
          type: boolean
          default: false
        operator:
          $ref: '#/components/schemas/operator'
    searchBody:
      description: >-
        The Parameters for Time Series Request.
        By default, 
        The supported values for aggregation are: `mean`, `median`, `standard_deviation`, `min` and `max`.
      type: object

      allOf:
        - $ref: '#/components/schemas/datetimeFilter'
        - $ref: '#/components/schemas/attributesFilter'
        - $ref: '#/components/schemas/intersectsFilter'
        - $ref: '#/components/schemas/operators'
    datetime:
      type: string
      description: >-
        Either a date-time or an interval, open or closed. Date and time
        expressions

        adhere to RFC 3339. Open intervals are expressed using double-dots.


        Examples:


        * A date-time: "2018-02-12T23:20:50Z"

        * A closed interval: "2018-02-12T00:00:00Z/2018-03-18T12:31:12Z"

        * Open intervals: "2018-02-12T00:00:00Z/.." or "../2018-03-18T12:31:12Z"


        Only features that have a temporal property that intersects the value of

        `datetime` are selected.


        If a feature has multiple temporal properties, it is the decision of the

        server whether only a single temporal property is used to determine

        the extent or all relevant temporal properties.
      example: '2018-02-12T00:00:00Z/2018-03-18T12:31:12Z'
    datetimeFilter:
      description: An object representing a date+time based filter.
      type: object
      properties:
        datetime:
          $ref: '#/components/schemas/datetime'
    attributesFilter:
      description: An object representing a date+time based filter.
      type: array
      items:
        type: string
      required:
        - attributes
      properties:
        attributes:
          type: array
          minItems: 1
          items:
            type: string
    geom:
      type: object
      oneOf:
        - $ref: 'https://geojson.org/schema/Point.json'
        # - $ref: 'https://geojson.org/schema/MultiPoint.json'
        - $ref: 'https://geojson.org/schema/Polygon.json'
        # - $ref: 'https://geojson.org/schema/MultiPolygon.json'
    intersectsFilter:
      type: object
      description: Only returns items that intersect with the provided polygon.
      required:
        - geom
      properties:
        geom:
          oneOf:
            - $ref: 'https://geojson.org/schema/Point.json'
            # - $ref: 'https://geojson.org/schema/MultiPoint.json'
            - $ref: 'https://geojson.org/schema/Polygon.json'
            # - $ref: 'https://geojson.org/schema/MultiPolygon.json'
    exception:
      type: object
      description: >-
        Information about the exception: an error code plus an optional
        description.
      required:
        - code
      properties:
        code:
          type: string
        description:
          type: string
    wtss_version:
      type: string
      description: WTSS version
  responses:
    InvalidParameter:
        description: A query parameter has an invalid value.
        content:
            application/json:
              schema:
                $ref: '#/components/schemas/exception'
    NotFound:
        description: The requested URI was not found.
        content:
            application/json:
              schema:
                $ref: '#/components/schemas/exception'
    ServerError:
        description: A server error occurred.
        content:
            application/json:
              schema:
                $ref: '#/components/schemas/exception'
    LandingPage:
        description: Landing Page
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/landing'

externalDocs:
  description: Web Time Series Service specification repository.
  url: 'https://github.com/brazil-data-cube/wtss-spec'
