openapi: 3.0.1
info:
  version: '2.0'
  title: Web Time Series Service
  description: >
        Web Time Series Service (WTSS) is a lightweight web service for handling time series data from remote sensing imagery. Given a location and a time interval you can retrieve the according time series as a JSON array of numbers.

        There are free and open source implementations based on this specification:

        - [wtss-server](https://github.com/brazil-data-cube/wtss-server): WTSS web server implemented in Python.

        - [wtss.py](https://github.com/brazil-data-cube/wtss.py): Client API for Python.

        - [wtss](https://github.com/e-sensing/wtss): Client API for R.
servers:
    - url: 'https://brazildatacube.dpi.inpe.br/wtss'
      description: Production server

    - url: 'http://brazildatacube.dpi.inpe.br/dev/wtss'
      description: Development server
paths:
  /:
    get:
      tags:
        - Capabilities
      summary: landing page
      description: |-
        The landing page provides links to the API definition, the conformance
        statements and to the feature collections in this dataset.
      operationId: getLandingPage
      responses:
        '200':
          $ref: '#/components/responses/LandingPage'
        '500':
          $ref: '#/components/responses/ServerError'
  '/timeseries/{collectionId}':
  
    get:
      operationId: getTimeSeries
      summary: fetch time series
      tags:
        - TimeSeries
      responses:
        '200':
          description: Get a Time Series of a given Collection
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/timeseries'
        '400':
          $ref: '#/components/responses/InvalidParameter'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/ServerError'
      parameters:
        - $ref: '#/components/parameters/collectionId'
        - $ref: '#/components/parameters/geom'
        - $ref: '#/components/parameters/attributes'
        - $ref: '#/components/parameters/datetime'
        - $ref: '#/components/parameters/aggregation'
        - $ref: '#/components/parameters/scale'
        - $ref: '#/components/parameters/operator'
    post:
      operationId: getTimeSeriesPost
      summary: fetch time series
      tags:
        - TimeSeries
      parameters:
        - $ref: '#/components/parameters/collectionId'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/searchBody'
      responses:
        '200':
          description: Get a Time Series of a given Collection
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/timeseries'
        '400':
          $ref: '#/components/responses/InvalidParameter'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/ServerError'
components:
  parameters:
    geom:
      name: geom
      description: >-
        The GeoJSON representation to retrieve time series for the given location.
      in: query
      required: true
      schema:
        $ref: '#/components/schemas/geom'
      style: form
      explode: false
    datetime:
      name: datetime
      in: query
      description: >-
        Either a datetime or an open or closed range. Date and time expressions follow the RFC 3339 standard. Open ranges are expressed using double dots.
        
        Examples:

        * A date-time (e.g. "2018-02-12T23:20:50Z"): In this way, the search will query data whose date is equal to the specified date.


        * A closed interval (e.g. "2018-02-12T00:00:00Z/2018-03-18T12:31:12Z"): In this way, the search will query data whose date is greater than or equal to the specified start date and less than or equal to the specified end date.


        * Open intervals (e.g. "2018-02-12T00:00:00Z/.." or "../2018-03-18T12:31:12Z"): In this way, the search will query data whose date is greater than or equal to the specified start date, or data whose date is less than or equal to the specified end date.


        Only features that have a temporal property that intersects the value of datetime are selected.

        If a feature has multiple temporal properties, it is the decision of the server whether only a single temporal property is used to determine the extent or all relevant temporal properties.
        
      required: false
      schema:
        type: string
      style: form
      explode: false
    attributes:
      name: attributes
      in: query
      description: A List of attribute names of a Collection.
      required: true
      schema:
        type: array
        items:
          type: string
      explode: false
    collectionId:
      name: collectionId
      in: path
      description: Identifier of a STAC collection
      required: true
      schema:
        type: string
    aggregation:
      name: aggregation
      in: query
      description: >-
      
        The aggregation methods applied in time series values.
        
        
        **Function only available when the geometry is not a point!**

        
        To use this feature, the user must add the desired metrics to the array. For example:
        
        
        * User wants average pixels for each date: ["mean"]
        
        * User wants minimum and maximum pixels for each date: ["min", "max"]
        
        
        Available metrics are listed below:
        
        * **min:** Each array item contains the smallest pixel value for that date.
        
        * **max:** Each array item contains the largest pixel value for that date.
        
        * **mean:** Each array item contains the average pixel values for that date.
        
        * **median:** Each array item contains the median of the pixel values for that date.
        
        * **standard_deviation:** Each array item contains the standard deviation of the average pixel values for that date.
  
      required: false
      schema:
        $ref: '#/components/schemas/aggregation'
    scale:
      name: scale
      in: query
      description: Apply the scale factor and scale factor offset along the time series values
      schema:
        type: boolean
        default: false
    operator:
      name: operator
      in: query
      description: Use a geospatial method to retrieve pixel intersection.
      schema:
        $ref: '#/components/schemas/operator'
    timeline_per_pixel:
      name: timeline_per_pixel
      in: query
      description: Apply the timeline for each pixel
      schema:
        type: boolean
        default: false
  schemas:
    landing:
      type: object
      description: >-
        The index url resource of WTSS server.
      properties:
        wtss_version:
          $ref: '#/components/schemas/wtss_version'
        links:
          type: array
          items:
            $ref: '#/components/schemas/link'
    link:
      type: object
      description: >-
        Describes a relationship with another link entity.
      properties:
        href:
          description: Define the actual link in the format of an URL. Relative and absolute links are both allowed.
          type: string
        rel:
          description: The Relationship between the current document and the linked documents
          type: string
        type:
          description: The application media type of the document.
          type: string
        title:
          description: A human readable title to be used in rendered displays of the link.
          type: string
    timeseries:
      type: object
      required:
        - values
      properties:
        attributes:
          type: array
          items:
            type: object
            required:
              - name
              - series
            properties:
              name:
                type: string
              series:
                type: array
                items:
                  type: object
                  required:
                    - latitude
                    - longitude
                  properties:
                    point:
                      type: array
                      description: Latitude and Longitude, respectively.
                      maxItems: 2
                      minItems: 2
                      items:
                        type: number
                    values:
                      type: array
                      items:
                        type: number
                    timeline:
                      type: array
                      items:
                        type: string
              mean:
                type: array
                description: Display the Mean values from Series. See more in Aggregation Operator.
                items:
                  type: number
              median:
                type: array
                items:
                  type: number
              std:
                type: array
                items:
                  type: number
              min:
                type: array
                items:
                  type: number
              max:
                type: array
                items:
                  type: number
        timeline:
          type: array
          items:
            $ref: '#/components/schemas/datetime'
    operator:
      type: string
      enum:
        - intersects
        - contains
      default: 'intersects'
    aggregation:
      type: array
      items:
        type: string
        enum:
          - mean
          - median
          - min
          - max
          - standard_deviation
    operators:
      type: object
      properties:
        aggregation:
          $ref: '#/components/schemas/aggregation'
        scale:
          type: boolean
          default: false
        operator:
          $ref: '#/components/schemas/operator'
    searchBody:
      description: >-
        The Parameters for Time Series Request.
        By default, 
        The supported values for aggregation are: `mean`, `median`, `standard_deviation`, `min` and `max`.
      type: object

      allOf:
        - $ref: '#/components/schemas/datetimeFilter'
        - $ref: '#/components/schemas/attributesFilter'
        - $ref: '#/components/schemas/intersectsFilter'
        - $ref: '#/components/schemas/operators'
        - type: object
          properties: 
            timeline_per_pixel:
              type: boolean
              default: false
    datetime:
      type: string
      description: >-
        Either a date-time or an interval, open or closed. Date and time
        expressions

        adhere to RFC 3339. Open intervals are expressed using double-dots.


        Examples:


        * A date-time: "2018-02-12T23:20:50Z"

        * A closed interval: "2018-02-12T00:00:00Z/2018-03-18T12:31:12Z"

        * Open intervals: "2018-02-12T00:00:00Z/.." or "../2018-03-18T12:31:12Z"


        Only features that have a temporal property that intersects the value of

        `datetime` are selected.


        If a feature has multiple temporal properties, it is the decision of the

        server whether only a single temporal property is used to determine

        the extent or all relevant temporal properties.
      example: '2018-02-12T00:00:00Z/2018-03-18T12:31:12Z'
    datetimeFilter:
      description: An object representing a date+time based filter.
      type: object
      properties:
        datetime:
          $ref: '#/components/schemas/datetime'
    attributesFilter:
      description: An object representing a date+time based filter.
      type: array
      items:
        type: string
      required:
        - attributes
      properties:
        attributes:
          type: array
          minItems: 1
          items:
            type: string
    geom:
      type: object
      oneOf:
        - $ref: 'https://geojson.org/schema/Point.json'
        # - $ref: 'https://geojson.org/schema/MultiPoint.json'
        - $ref: 'https://geojson.org/schema/Polygon.json'
        # - $ref: 'https://geojson.org/schema/MultiPolygon.json'
    intersectsFilter:
      type: object
      description: Only returns items that intersect with the provided polygon.
      required:
        - geom
      properties:
        geom:
          oneOf:
            - $ref: 'https://geojson.org/schema/Point.json'
            # - $ref: 'https://geojson.org/schema/MultiPoint.json'
            - $ref: 'https://geojson.org/schema/Polygon.json'
            # - $ref: 'https://geojson.org/schema/MultiPolygon.json'
    exception:
      type: object
      description: >-
        Information about the exception: an error code plus an optional
        description.
      required:
        - code
      properties:
        code:
          type: string
        description:
          type: string
    wtss_version:
      type: string
      description: WTSS version
  responses:
    InvalidParameter:
        description: A query parameter has an invalid value.
        content:
            application/json:
              schema:
                $ref: '#/components/schemas/exception'
    NotFound:
        description: The requested URI was not found.
        content:
            application/json:
              schema:
                $ref: '#/components/schemas/exception'
    ServerError:
        description: A server error occurred.
        content:
            application/json:
              schema:
                $ref: '#/components/schemas/exception'
    LandingPage:
        description: Landing Page
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/landing'

externalDocs:
  description: Web Time Series Service specification repository.
  url: 'https://github.com/brazil-data-cube/wtss-spec'
