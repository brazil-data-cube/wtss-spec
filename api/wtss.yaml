openapi: 3.0.1
info:
  version: '2.0'
  title: WTSS
  description: |
    Web Time Series Service 2.0
servers:
  - url: 'localhost:5000'
paths:
  /:
    get:
      tags:
        - Capabilities
      summary: landing page
      description: |-
        The landing page provides links to the API definition, the conformance
        statements and to the feature collections in this dataset.
      operationId: getLandingPage
      responses:
        '200':
          $ref: '#/components/responses/LandingPage'
        '500':
          $ref: '#/components/responses/ServerError'
  /collections:
    get:
      operationId: getCollections
      summary: the feature collections in the dataset
      tags:
        - Capabilities
      responses:
        '200':
          description: Get all Collections
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/collections'
        '500':
          $ref: '#/components/responses/ServerError'
  '/collections/{collection_id}':
    get:
      operationId: describeCollection
      summary: describe the feature collection with id `collection_id`
      tags:
        - Capabilities
      responses:
        '200':
          description: Return a given Collection
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/collection'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/ServerError'
  '/collections/{collection_id}/timeseries':
    get:
      operationId: getTimeSeries
      summary: fetch time series
      tags:
        - TimeSeries
      responses:
        '200':
          description: Get a Time Series of a given Collection
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/timeseries'
        '400':
          $ref: '#/components/responses/InvalidParameter'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/ServerError'
      parameters:
        - $ref: '#/components/parameters/point'
        - $ref: '#/components/parameters/bands'
        - $ref: '#/components/parameters/datetime'
    post:
      operationId: getTimeSeries
      summary: fetch time series
      tags:
        - TimeSeries
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/searchBody'
      responses:
        '200':
          description: Get a Time Series of a given Collection
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/timeseries'
        '400':
          $ref: '#/components/responses/InvalidParameter'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/ServerError'
components:
  parameters:
    point:
      name: point
      in: query
      required: true
      schema:
        minItems: 2
        maxItems: 2
        type: array
        items:
          type: number
      style: form
      explode: false
    datetime:
      name: datetime
      in: query
      description: >-
        Either a date-time or an interval, open or closed. Date and time
        expressions

        adhere to RFC 3339. Open intervals are expressed using double-dots.


        Examples:


        * A date-time: "2018-02-12T23:20:50Z"

        * A closed interval: "2018-02-12T00:00:00Z/2018-03-18T12:31:12Z"

        * Open intervals: "2018-02-12T00:00:00Z/.." or "../2018-03-18T12:31:12Z"


        Only features that have a temporal property that intersects the value of

        `datetime` are selected.


        If a feature has multiple temporal properties, it is the decision of the

        server whether only a single temporal property is used to determine

        the extent or all relevant temporal properties.
      required: false
      schema:
        type: string
      style: form
      explode: false
    bands:
      name: bands
      in: query
      required: false
      schema:
        type: array
        items:
          type: string
      explode: false
    collection_id:
      name: collection_id
      in: path
      description: local identifier of a collection
      required: true
      schema:
        type: string
  schemas:
    collection:
      type: object
      required:
        - name
        - wtss_version
        - extent
      properties:
        name:
          type: string
        wtss_version:
          $ref: '#/components/schemas/wtss_version'
        extent:
          $ref: '#/components/schemas/extent'
    collections:
      type: object
      required:
        - collections
      properties:
        collections:
          type: array
          items: string
    timeseries:
      type: object
      required:
        - values
      properties:
        values:
          type: array
          items: numbers
    extent:
      type: object
      description: >-
        The extent of the features in the collection. In the Core only spatial
        and temporal

        extents are specified. Extensions may add additional members to
        represent other

        extents, for example, thermal or pressure ranges.
      properties:
        spatial:
          description: The spatial extent of the features in the collection.
          type: object
          properties:
            bbox:
              description: >-
                One or more bounding boxes that describe the spatial extent of
                the dataset.

                In the Core only a single bounding box is supported. Extensions
                may support

                additional areas. If multiple areas are provided, the union of
                the bounding

                boxes describes the spatial extent.
              type: array
              minItems: 1
              items:
                description: >-
                  Each bounding box is provided as four numbers

                  * Lower left corner, coordinate axis 1

                  * Lower left corner, coordinate axis 2

                  * Upper right corner, coordinate axis 1

                  * Upper right corner, coordinate axis 2


                  The coordinate reference system of the values is WGS 84
                  longitude/latitude

                  (http://www.opengis.net/def/crs/OGC/1.3/CRS84) unless a
                  different coordinate

                  reference system is specified in `crs`.


                  For WGS 84 longitude/latitude the values are in most cases the
                  sequence of

                  minimum longitude, minimum latitude, maximum longitude and
                  maximum latitude.

                  However, in cases where the box spans the antimeridian the
                  first value

                  (west-most box edge) is larger than the third value (east-most
                  box edge).


                  If the vertical axis is included, the third and the sixth
                  number are

                  the bottom and the top of the 3-dimensional bounding box.


                  If a feature has multiple spatial geometry properties, it is
                  the decision of the

                  server whether only a single spatial geometry property is used
                  to determine

                  the extent or all relevant geometries.
                type: array
                minItems: 4
                maxItems: 4
                items:
                  type: number
                example:
                  - -180
                  - -90
                  - 180
                  - 90
            crs:
              description: >-
                Coordinate reference system of the coordinates in the spatial
                extent

                (property `bbox`). The default reference system is WGS 84
                longitude/latitude.

                In the Core this is the only supported coordinate reference
                system.

                Extensions may support additional coordinate reference systems
                and add

                additional enum values.
              type: string
              enum:
                - 'http://www.opengis.net/def/crs/OGC/1.3/CRS84'
              default: 'http://www.opengis.net/def/crs/OGC/1.3/CRS84'
          required:
            - bbox
        temporal:
          description: The temporal extent of the features in the collection.
          type: object
          properties:
            timeline:
              type: array
              minItems: 1
              items:
                type: string
                format: date-time
                nullable: false
          required:
            - timeline
      required:
        - spatial
        - temporal
    searchBody:
      description: The search criteria
      type: object
      allOf:
        - $ref '#/components/schemas/datetimeFilter'
        - $ref '#/components/schemas/bandsFilter'
        - $ref '#/components/schemas/intersectsFilter'
        - $ref '#/components/schemas/limitFilter'
        - $ref '#/components/schemas/pageFilter'
    numberMatched:
      description: |-
        The number of features of the feature type that match the selection
        parameters like `intersects`.
      type: integer
      minimum: 0
      example: 127
    numberReturned:
      description: |-
        The number of features in the feature collection.

        A server may omit this information in a response, if the information
        about the number of features is not known or difficult to compute.

        If the value is provided, the value shall be identical to the number
        of items in the "features" array.
      type: integer
      minimum: 0
      example: 10
    limit:
      type: integer
      minimum: 1
      default: 10
      description: The maximum number of results to return (page size). Defaults to 10
    page:
      type: integer
      minimum: 1
      default: 1
      description: The page number of results to return. Defaults to 1
    datetimeFilter:
      description: An object representing a date+time based filter.
      type: object
      properties:
        datetime:
          $ref: '#/components/schemas/datetime'
    bandsFilter:
      description: An object representing a date+time based filter.
      type: array
      items:
        type: string
      properties:
        datetime:
          $ref: '#/components/schemas/band'
    intersectsFilter:
      type: object
      description: Only returns items that intersect with the provided polygon.
      properties:
        intersects:
          oneOf:
            - $ref: 'https://geojson.org/schema/Point.json'
            - $ref: 'https://geojson.org/schema/MultiPoint.json'
            - $ref: 'https://geojson.org/schema/Polygon.json'
            - $ref: 'https://geojson.org/schema/MultiPolygon.json'
    limitFilter:
      type: object
      description: Only returns maximum number of results (page size)
      properties:
        limit:
          $ref: '#/components/schemas/limit'
    pageFilter:
      type: object
      description: Only returs the given page
      properties:
        limit:
          $ref: '#/components/schemas/page'
    exception:
      type: object
      description: >-
        Information about the exception: an error code plus an optional
        description.
      required:
        - code
      properties:
        code:
          type: string
        description:
          type: string
    datetime:
      type: string
      description: >-
        Either a date-time or an interval, open or closed. Date and time
        expressions

        adhere to RFC 3339. Open intervals are expressed using double-dots.


        Examples:


        * A date-time: "2018-02-12T23:20:50Z"

        * A closed interval: "2018-02-12T00:00:00Z/2018-03-18T12:31:12Z"

        * Open intervals: "2018-02-12T00:00:00Z/.." or "../2018-03-18T12:31:12Z"


        Only features that have a temporal property that intersects the value of

        `datetime` are selected.


        If a feature has multiple temporal properties, it is the decision of the

        server whether only a single temporal property is used to determine

        the extent or all relevant temporal properties.
      example: '2018-02-12T00:00:00Z/2018-03-18T12:31:12Z'
    band:
      type: array
      items: string
      description: An array of select bands
    wtss_version:
      type: string
      description: WTSS version
  responses:
    InvalidParameter:
        description: A query parameter has an invalid value.
        content:
            application/json:
              schema:
                $ref: '#/components/schemas/exception'
    NotFound:
        description: The requested URI was not found.
        content:
            application/json:
              schema:
                $ref: '#/components/schemas/exception'
    ServerError:
        description: A server error occurred.
        content:
            application/json:
              schema:
                $ref: '#/components/schemas/exception'
    LandingPage:
        description: Landing Page

externalDocs:
  description: Web Time Series Service specification repository.
  url: 'https://github.com/brazil-data-cube/wtss-spec'
